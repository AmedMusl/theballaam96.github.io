if (*(byte *)(behaviour + 0x48) == 0) {
*(byte *)(behaviour + 0x4B) = 1
}
if (*(int *)(PlayerPointer->ActorType) == 5) {
*(code *)(0x80747EB4)(behaviour,param_4,0,0)
}
if (*(byte *)(behaviour + 0x48) == 1) {
x2_successful = 0
x2_focusedPlayerNumber = 0
if (player_count != 0) {
do {
x2_focusedPlayerNumber_ = x2_focusedPlayerNumber
x2_focusedPlayerNumber = (x2_focusedPlayerNumber_ + 1) & 0xFF
if (*(byte *)(character_change_pointer[x2_focusedPlayerNumber_]->does_player_exist) != 0) {
x2_focusedPlayerPointer = *(int *)(character_change_pointer[x2_focusedPlayerNumber_)]->character_pointer)
if (*(byte *)(x2_focusedPlayerPointer->locked_to_pad) == 1) {
if (param_4 == *(short *)(x2_focusedPlayerPointer->standingOnObjectM2Index)) {
x2_successful = 1
}
}
}
} while x2_focusedPlayerNumber < player_count
}
if (x2_successful == 1) {
x17_successful = 0
x17_focusedPlayerNumber = 0
if (player_count != 0) {
do {
x17_focusedPlayerNumber_ = x17_focusedPlayerNumber
x17_focusedPlayerNumber = (x17_focusedPlayerNumber_ + 1) & 0xFF
if (*(byte *)(character_change_pointer[x17_focusedPlayerNumber_]->does_player_exist) != 0) {
x17_focusedPlayerPointer = *(int *)(character_change_pointer[x17_focusedPlayerNumber_]->character_pointer)
if (*(byte *)(x17_focusedPlayerPointer->control_state) == 28) {
x17_successful = 1
}
}
} while (x17_focusedPlayerNumber < player_count)
}
if (x17_successful == 1) {
if (*(int *)(PlayerPointer->ActorType) == 5) {
if ((*(byte *)CurrentCollectableBase->SlamLvl => 1)) {
FUN_806508B4(param_4,1,1)
FUN_806085DC(param_4,326,255,127)
playCutsceneFromModelTwoScript(behaviour,0,1,0)
*(short *)(behaviour + 0x44) = 160
}
}
}
}
}
if (*(byte *)(behaviour + 0x48) == 1) {
x2_successful = 0
x2_focusedPlayerNumber = 0
if (player_count != 0) {
do {
x2_focusedPlayerNumber_ = x2_focusedPlayerNumber
x2_focusedPlayerNumber = (x2_focusedPlayerNumber_ + 1) & 0xFF
if (*(byte *)(character_change_pointer[x2_focusedPlayerNumber_]->does_player_exist) != 0) {
x2_focusedPlayerPointer = *(int *)(character_change_pointer[x2_focusedPlayerNumber_)]->character_pointer)
if (*(byte *)(x2_focusedPlayerPointer->locked_to_pad) == 1) {
if (param_4 == *(short *)(x2_focusedPlayerPointer->standingOnObjectM2Index)) {
x2_successful = 1
}
}
}
} while x2_focusedPlayerNumber < player_count
}
if (x2_successful == 1) {
x17_successful = 0
x17_focusedPlayerNumber = 0
if (player_count != 0) {
do {
x17_focusedPlayerNumber_ = x17_focusedPlayerNumber
x17_focusedPlayerNumber = (x17_focusedPlayerNumber_ + 1) & 0xFF
if (*(byte *)(character_change_pointer[x17_focusedPlayerNumber_]->does_player_exist) != 0) {
x17_focusedPlayerPointer = *(int *)(character_change_pointer[x17_focusedPlayerNumber_]->character_pointer)
if (*(byte *)(x17_focusedPlayerPointer->control_state) == 28) {
x17_successful = 1
}
}
} while (x17_focusedPlayerNumber < player_count)
}
if (x17_successful == 1) {
if (*(int *)(PlayerPointer->ActorType) == 5) {
if ((*(byte *)CurrentCollectableBase->SlamLvl => 1)) {
FUN_8064199C(behaviour,1,0)
*(byte *)(behaviour + 0x4B) = 2
}
}
}
}
}
if (*(byte *)(behaviour + 0x48) == 2) {
if (*(ushort *)(behaviour + 0x44) == 150) {
FUN_806418E8(0,10,behaviour)
x54_ivar7 = (&WORD_807F6240)[0]
if (x54_ivar7 != -1) {
FUN_8064199C(ObjectModel2ArrayPointer[x54_ivar7].behaviour,1,0)
}
}
}
if (*(byte *)(behaviour + 0x48) == 2) {
if (*(ushort *)(behaviour + 0x44) == 130) {
FUN_806418E8(1,10,behaviour)
x54_ivar7 = (&WORD_807F6240)[1]
if (x54_ivar7 != -1) {
FUN_8064199C(ObjectModel2ArrayPointer[x54_ivar7].behaviour,1,0)
}
}
}
if (*(byte *)(behaviour + 0x48) == 2) {
if (*(ushort *)(behaviour + 0x44) == 110) {
FUN_806418E8(2,10,behaviour)
x54_ivar7 = (&WORD_807F6240)[2]
if (x54_ivar7 != -1) {
FUN_8064199C(ObjectModel2ArrayPointer[x54_ivar7].behaviour,1,0)
}
}
}
if (*(byte *)(behaviour + 0x48) == 2) {
if (*(ushort *)(behaviour + 0x44) == 90) {
FUN_806418E8(3,10,behaviour)
x54_ivar7 = (&WORD_807F6240)[3]
if (x54_ivar7 != -1) {
FUN_8064199C(ObjectModel2ArrayPointer[x54_ivar7].behaviour,1,0)
}
}
}
if (*(byte *)(behaviour + 0x48) == 2) {
if (*(ushort *)(behaviour + 0x44) == 0) {
FUN_8064199C(behaviour,0,0)
}
}
